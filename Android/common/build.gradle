plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
}

if (project.property("AGORA_APP_ID").toString().isEmpty()) {
    throw new GradleException("Please config AGORA_APP_ID in gradle.properties")
}

def baseProps = new File(rootProject.projectDir.absolutePath + File.separator + "gradle.properties")
def properties = new Properties()
if (baseProps.exists()) {
    baseProps.withReader('UTF-8') { reader ->
        properties.load(reader)
    }
}
final def USE_LOCAL_SDK = properties.getProperty("USE_LOCAL_SDK").toBoolean()
def localsdkPath = "agora-sdk"

android {
    namespace 'io.agora.scene.base'
    compileSdk rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        flavorDimensions ""

        buildConfigField "String", "APP_VERSION_NAME", "\"${APP_VERSION_NAME}\""
        buildConfigField "String", "APP_VERSION_CODE", "\"${APP_VERSION_CODE}\""

        buildConfigField "String", "AGORA_APP_ID", "\"${AGORA_APP_ID}\""
        buildConfigField "String", "AGORA_APP_CERTIFICATE", "\"${AGORA_APP_CERTIFICATE}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            consumerProguardFiles 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
        buildConfig true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }

    if (USE_LOCAL_SDK) {
        sourceSets {
            main {
                jniLibs.srcDirs += "${localsdkPath}"
            }
        }
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    implementation rootProject.ext.deps.appcompat
    api rootProject.ext.deps.multidex
    implementation rootProject.ext.deps.annotation
    implementation rootProject.ext.deps.material
    implementation rootProject.ext.deps.recyclerview

    api rootProject.ext.deps.rxjava2
    api rootProject.ext.deps.rxandroid2
    api rootProject.ext.deps.okhttp
    api rootProject.ext.deps.okhttp_logger
    api rootProject.ext.deps.retrofit2
    api rootProject.ext.deps.retrofit2_adapter
    api rootProject.ext.deps.retrofit2_cov
    api rootProject.ext.deps.gson

    implementation rootProject.ext.deps.logger

    kapt rootProject.ext.deps.glide_compiler
    implementation rootProject.ext.deps.glide

    implementation rootProject.ext.deps.coroutines_android

    implementation rootProject.ext.deps.appcompat
    implementation rootProject.ext.deps.material
    implementation rootProject.ext.deps.constraintlayout
    implementation rootProject.ext.deps.glide

    if (USE_LOCAL_SDK) {
        api fileTree(dir: "${localsdkPath}", include: ['*.jar'])
    } else {
        api rootProject.ext.deps.rtc
    }

    api rootProject.ext.deps.lifecycle_extensions
}
