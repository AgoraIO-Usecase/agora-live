plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
}

android {
    namespace 'io.agora.scene.show'
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion

        consumerProguardFiles "consumer-rules.pro"

        buildConfigField "String", "CLOUD_PLAYER_KEY", "\"${CLOUD_PLAYER_KEY}\""
        buildConfigField "String", "CLOUD_PLAYER_SECRET", "\"${CLOUD_PLAYER_SECRET}\""
        buildConfigField "String", "BEAUTY_RESOURCE", "\"${BEAUTY_RESOURCE}\""
    }

    resourcePrefix "show"

    buildFeatures {
        viewBinding true
        buildConfig true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(":common")
    implementation project(":RTMSyncManager")

    implementation rootProject.ext.deps.appcompat
    implementation rootProject.ext.deps.annotation
    api rootProject.ext.deps.material
    implementation rootProject.ext.deps.palette_ktx
    implementation rootProject.ext.deps.layout_kernel
    implementation rootProject.ext.deps.header_classics

    implementation rootProject.ext.deps.xlog

    kapt rootProject.ext.deps.glide_compiler
    implementation rootProject.ext.deps.glide

    implementation rootProject.ext.deps.lifecycle
    implementation rootProject.ext.deps.fragment_ktx

    implementation rootProject.ext.deps.rtm

    if (BEAUTY_RESOURCE == "") {
        implementation 'com.faceunity:model:8.7.0'
    }
    implementation 'com.faceunity:core:8.7.0'
}